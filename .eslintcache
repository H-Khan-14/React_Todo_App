[{"/Users/haseebkhan/Desktop/CProjects/todo-list/src/index.js":"1","/Users/haseebkhan/Desktop/CProjects/todo-list/src/components/App.js":"2","/Users/haseebkhan/Desktop/CProjects/todo-list/src/components/Todo.js":"3","/Users/haseebkhan/Desktop/CProjects/todo-list/src/components/Form.js":"4","/Users/haseebkhan/Desktop/CProjects/todo-list/src/components/FilterButton.js":"5"},{"size":368,"mtime":1610149641889,"results":"6","hashOfConfig":"7"},{"size":1917,"mtime":1610153153720,"results":"8","hashOfConfig":"7"},{"size":2204,"mtime":1610153038821,"results":"9","hashOfConfig":"7"},{"size":660,"mtime":1610150795048,"results":"10","hashOfConfig":"7"},{"size":296,"mtime":1610153129376,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1350fin",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/haseebkhan/Desktop/CProjects/todo-list/src/index.js",[],["25","26"],"/Users/haseebkhan/Desktop/CProjects/todo-list/src/components/App.js",["27"],"import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport Todo from './Todo';\nimport Form from './Form';\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const taskList = tasks.map((task) => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: 'todo-' + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>The To Do List</h1>\n      <Form addTask={addTask} />\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/haseebkhan/Desktop/CProjects/todo-list/src/components/Todo.js",[],"/Users/haseebkhan/Desktop/CProjects/todo-list/src/components/Form.js",[],["28","29"],"/Users/haseebkhan/Desktop/CProjects/todo-list/src/components/FilterButton.js",["30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":63,"column":7,"nodeType":"37","endLine":67,"endColumn":8},{"ruleId":"31","replacedBy":"38"},{"ruleId":"33","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":3,"column":10,"nodeType":"42","messageId":"43","endLine":3,"endColumn":22},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement",["44"],["45"],"no-unused-vars","'FilterButton' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]