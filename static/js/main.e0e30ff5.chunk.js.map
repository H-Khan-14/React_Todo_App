{"version":3,"sources":["components/Todo.js","components/Form.js","components/App.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","newName","setNewName","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","htmlFor","name","type","value","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","Form","setName","addTask","autoComplete","App","tasks","setTasks","taskList","map","task","tasksNoun","length","headingText","updatedTasks","remainingTasks","filter","editedTaskList","newTask","nanoid","role","aria-labelledby","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e0e30ff5.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName('');\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </div>\n  );\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\n","import React, { useState } from 'react';\n\nfunction Form(props) {\n  const [name, setName] = useState('');\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName('');\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add Task\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport Todo from './Todo';\nimport Form from './Form';\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const taskList = tasks.map((task) => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: 'todo-' + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>The To Do List</h1>\n      <Form addTask={addTask} />\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nconst DATA = [\n  { id: 'todo-0', name: 'Eat', completed: true },\n  { id: 'todo-1', name: 'Sleep', completed: false },\n  { id: 'todo-2', name: 'Repeat', completed: false },\n];\n\nReactDOM.render(<App tasks={DATA} />, document.querySelector('#root'));\n"],"sourceRoot":""}